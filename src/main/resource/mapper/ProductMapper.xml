<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.product">
    <resultMap id="ProductInfoMap" type="ProductInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="product_name" property="productName"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <result column="supplier_id" property="supplierId"/>
        <result column="company_name" property="supplierName"/>
        <result column="store_price" property="storePrice"/>
        <result column="selling_price" property="sellingPrice"/>
        <result column="inventory" property="inventory"/>
    </resultMap>

    <resultMap id="ProductMap" type="Product">
        <id column="id" property="id" jdbcType="BIGINT" javaType="Long"/>
        <result column="category_id" property="categoryId"/>
        <result column="supplier_id" property="supplierId"/>
        <result column="supplier_name" property="supplierName"/>
        <result column="product_name" property="productName"/>
    </resultMap>

<!--SELECT-->
    <select id="findAll" resultMap="ProductMap">
        SELECT *
        FROM product
    </select>

    <select id="findById" resultMap="ProductMap" parameterType="Long">
        SELECT id,category_id,supplier_id,product_name
        FROM product
        WHERE id = #{id}
    </select>

    <select id="findByName" resultMap="ProductMap" parameterType="String">
        SELECT id,category_id,supplier_id,product_name
        FROM product
        WHERE product_name LIKE CONCAT('%', #{productName}, '%')
    </select>

    <select id="findProduct" resultMap="ProductInfoMap" parameterType="main.com.product.request.ProductSearch">
        SELECT p.id,p.product_name,p.category_id,pc.category_name,p.supplier_id,p.supplier_name,s.store_price,s.selling_price,s.inventory
        FROM (product as p join product_category as pc on p.category_id = pc.id)
        JOIN stock as s ON p.id = s.product_id
        <if test="id != null and id!=''">
            AND p.product_id = #{id}
        </if>

        <if test="productName != null and productName != ''">
            AND p.product_name LIKE CONCAT('%', #{productName}, '%')
        </if>

        <if test="supplierName != null and supplierName != ''">
            AND p.supplier_name LIKE CONCAT('%', #{supplierName}, '%')
        </if>

        <if test="categoryName != null and categoryName != ''">
            AND pc.category_name LIKE CONCAT('%', #{categoryName}, '%')
        </if>
    </select>

<!--INSERT-->
    <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product (product_name,category_id,supplier_id)
        VALUES (#{productName},#{categoryId},#{supplierId})
    </insert>

    <insert id="insertList" parameterType="arraylist" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product (product_name,category_id,supplier_id)
        VALUES
        <foreach item="product" collection="list" separator=",">
            (#{product.productName},#{product.categoryId},#{product.supplierId})
        </foreach>
    </insert>

<!--DELETE-->
    <delete id="delete" parameterType="Long" >
        DELETE FROM product
        WHERE id = #{id}
    </delete>

    <delete id="deleteList" parameterType="java.util.List">
        DELETE FROM product
        WHERE id IN
        <foreach item="productId" collection="list" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>

    <delete id="deleteAll" >
        DELETE FROM product
    </delete>

<!--UPDATE-->
    <update id="update" parameterType="Product">
        UPDATE product
        SET category_id = #{categoryId}, supplier_id = #{supplierId}, supplier_name = #{supplierName} ,product_name = #{productName}
        WHERE id = #{id}
    </update>
</mapper>